local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- üîÑ H√†m t√¨m Prompt g·ªëc trong map
local function findPrompt()
	local container = workspace:FindFirstChild("Game")
	if not container then return nil end
	container = container:FindFirstChild("Map")
	if not container then return nil end
	container = container:FindFirstChild("ProximityPrompts")
	if not container then return nil end
	container = container:FindFirstChild("Prompt")
	if not container then return nil end
	return container:FindFirstChildWhichIsA("ProximityPrompt")
end

-- üßπ X√≥a GUI khi n√≥ xu·∫•t hi·ªán trong PlayerGui
local function setupGuiDestroy()
	-- Xo√° ngay n·∫øu ƒë√£ t·ªìn t·∫°i
	local existing = playerGui:FindFirstChild("ProximityPrompts")
	if existing then existing:Destroy() end

	-- Theo d√µi n·∫øu xu·∫•t hi·ªán l·∫°i
	playerGui.ChildAdded:Connect(function(child)
		if child.Name == "ProximityPrompts" then
			task.wait()
			child:Destroy()
		end
	end)
end

setupGuiDestroy()

-- üîÅ V√≤ng l·∫∑p gi·ªØ Prompt li√™n t·ª•c
task.spawn(function()
	while true do
		local prompt = findPrompt()
		if prompt then
			-- ƒê·∫£m b·∫£o gi·ªØ t·ª´ xa
			prompt.MaxActivationDistance = 999999
			prompt.RequiresLineOfSight = false

			if not prompt.Enabled then
				prompt.Enabled = true
			end

			pcall(function()
				prompt:InputHoldBegin()
			end)
		end
		task.wait(0.5)
	end
end)
