local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Ki·ªÉm tra Remotes
local Remotes = ReplicatedStorage:FindFirstChild("Remotes")
if not Remotes then
    warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y Remotes")
    return
end

local Remote = Remotes:FindFirstChild("SoloToggleSpeedControl")
if not Remote then
    warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y SoloToggleSpeedControl")
    return
end

-- H√†m truy c·∫≠p TextLabel an to√†n
local function getTextLabel()
    local gui = LocalPlayer:FindFirstChild("PlayerGui")
    if not gui then return end
    local interface = gui:FindFirstChild("Interface")
    if not interface then return end
    local screen = interface:FindFirstChild("SpeedChangeScreen")
    if not screen then return end
    local owned = screen:FindFirstChild("Owned")
    if not owned then return end
    local active = owned:FindFirstChild("Active")
    if not active then return end
    local content = active:FindFirstChild("Content")
    if not content then return end
    local button = content:FindFirstChild("Button")
    if not button then return end
    local label = button:FindFirstChild("TextLabel")
    return label
end

-- Bi·∫øn ki·ªÉm so√°t
local isWaiting = false
local monitoring = true

RunService.Heartbeat:Connect(function()
    if not monitoring or isWaiting then return end

    local label = getTextLabel()
    if not label then
        warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y TextLabel, th·ª≠ l·∫°i sau 5 gi√¢y...")
        task.wait(5)
        return
    end

    local screen = LocalPlayer.PlayerGui:FindFirstChild("Interface")
        and LocalPlayer.PlayerGui.Interface:FindFirstChild("SpeedChangeScreen")

    if not screen or not screen.Active then
        task.wait(1)
        return
    end

    if not screen.Visible and label.Text ~= "Disabled" then
        isWaiting = true

        for i = 3, 1, -1 do
            print("‚è≥ S·∫Ω g·ª≠i remote sau "..i.."s...")
            task.wait(1)
        end

        if Remote:IsA("RemoteEvent") then
            Remote:FireServer(true, true)
        elseif Remote:IsA("RemoteFunction") then
            Remote:InvokeServer(true, true)
        end

        print("‚úÖ ƒê√£ g·ª≠i y√™u c·∫ßu b·∫≠t l·∫°i")

        -- ƒê·ª£i ph·∫£n h·ªìi sau khi g·ª≠i
        task.wait(0.5)

        -- N·∫øu Text l·∫°i th√†nh "Disabled", ti·∫øp t·ª•c ƒë·ª£i
        while label.Text == "Disabled" do
            warn("‚õî Giao di·ªán b√°o 'Disabled', ƒëang ch·ªù kh√¥i ph·ª•c...")
            task.wait(1)
        end

        print("üåü ƒê√£ s·∫µn s√†ng ƒë·ªÉ g·ª≠i l·∫°i n·∫øu c·∫ßn")
        isWaiting = false
    end

    task.wait(0.5)
end)

print("üöÄ ƒê√£ b·∫≠t gi√°m s√°t SpeedChangeScreen (c√≥ ki·ªÉm tra TextLabel 'Disabled')")