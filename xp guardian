-- ========== KI·ªÇM TRA GAME ==========
if game.PlaceId ~= 9503261072 then
    warn("‚ùå Kh√¥ng ph·∫£i Tower Defense X, d·ª´ng script.")
    return
end

-- ========== C·∫§U H√åNH ==========
local WEBHOOK_URL = "https://discord.com/api/webhooks/972059328276201492/DPHtxfsIldI5lND2dYUbA8WIZwp4NLYsPDG1Sy6-MKV9YMgV8OohcTf-00SdLmyMpMFC"
local XP_LIMIT = 10000
local SAVE_FILE = "BattlePassProgress.txt"

local BATTLE_PASSES = {
    {remote = "TB", display = "TOWER BATTLES"},
    {remote = "HW24", display = "HALLOWEEN 2024"},
    {remote = "XMAS24", display = "CHRISTMAS 2024"},
}

-- ========== D·ªäCH V·ª§ ==========
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

-- ========== H√ÄM G·ª¨I DISCORD ==========
local function sendToDiscord(message)
    local data = {
        content = message,
        username = "BP Tracker",
        avatar_url = "https://i.imgur.com/Lyq5mJO.png"
    }

    local encoded = HttpService:JSONEncode(data)
    local request = (syn and syn.request) or (http and http.request) or (request) or http_request

    if request then
        local ok, res = pcall(function()
            return request({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = encoded
            })
        end)
        if ok and res and res.StatusCode < 300 then return true end
    end
    warn("‚ùå Kh√¥ng g·ª≠i ƒë∆∞·ª£c Discord.")
    return false
end

-- ========== BI·∫æN ==========
local progress = {}
local lastXP = 0
local lastLevel = 0
local isFirstCheck = true

-- ========== L∆ØU/ƒê·ªåC FILE ==========
local function saveProgress()
    local data = {}
    for _, bp in ipairs(BATTLE_PASSES) do
        data[bp.remote] = progress[bp.remote] or 0
    end
    writefile(SAVE_FILE, HttpService:JSONEncode(data))
end

local function loadProgress()
    if isfile(SAVE_FILE) then
        local ok, data = pcall(function()
            return HttpService:JSONDecode(readfile(SAVE_FILE))
        end)
        if ok then
            for _, bp in ipairs(BATTLE_PASSES) do
                progress[bp.remote] = data[bp.remote] or 0
            end
            return
        end
    end
    for _, bp in ipairs(BATTLE_PASSES) do
        progress[bp.remote] = 0
    end
end

-- ========== L·∫§Y TH√îNG TIN GUI ==========
local function getCurrentXP()
    local ok, xpText = pcall(function()
        return LocalPlayer.PlayerGui.GUI.BattlePass.BattlePassDetails.LevelInfo.XP.TextLabel.Text
    end)
    if ok and xpText then
        local xp = tonumber(xpText:match("%d+"))
        return xp or 0
    end
    return 0
end

local function getCurrentLevel()
    local ok, lvlText = pcall(function()
        return LocalPlayer.PlayerGui.Model.GUI.BattlePass.BattlePassDetails.LevelInfo.Current.TextLabel.Text
    end)
    if ok and lvlText then
        local lvl = tonumber(lvlText:match("%d+"))
        return lvl or 0
    end
    return 0
end

local function getCurrentBattlePass()
    local ok, name = pcall(function()
        return LocalPlayer.PlayerGui.GUI.BattlePass.BattlePassDetails.PreviewInfo.DisplayName.Text
    end)
    if ok and name then
        for _, bp in ipairs(BATTLE_PASSES) do
            if bp.display:lower() == name:lower() then
                return bp.remote, bp.display
            end
        end
    end
    return nil, nil
end

-- ========== K√çCH HO·∫†T BATTLEPASS ==========
local function activateBattlePass(bpName)
    local net = ReplicatedStorage:FindFirstChild("Network")
    if not net then return false end
    local remote = net:FindFirstChild("BattlePassRequestActivate")
    if not remote then return false end
    local ok, result = pcall(function()
        return remote:InvokeServer(bpName)
    end)
    return ok and result or false
end

-- ========== TI·ªÜN √çCH ==========
local function getNextBattlePass()
    for _, bp in ipairs(BATTLE_PASSES) do
        if (progress[bp.remote] or 0) < XP_LIMIT then
            return bp.remote, bp.display
        end
    end
    return nil, nil
end

local function allMaxed()
    for _, bp in ipairs(BATTLE_PASSES) do
        if (progress[bp.remote] or 0) < XP_LIMIT then
            return false
        end
    end
    return true
end

-- ========== THEO D√ïI TI·∫æN TR√åNH ==========
local function checkProgress()
    local currentXP = getCurrentXP()
    local currentLevel = getCurrentLevel()
    local bpRemote, bpDisplay = getCurrentBattlePass()

    if not bpRemote then
        warn("Kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c BattlePass.")
        return
    end

    progress[bpRemote] = progress[bpRemote] or 0

    if isFirstCheck then
        lastXP = currentXP
        lastLevel = currentLevel
        isFirstCheck = false
        return
    end

    local xpGained = currentXP - lastXP
    if xpGained > 0 then
        progress[bpRemote] = math.min(progress[bpRemote] + xpGained, XP_LIMIT)
        saveProgress()

        sendToDiscord(string.format(
            "üéØ %s: +%d XP (T·ªïng: %d/%d)\nLevel: %d",
            bpDisplay, xpGained, progress[bpRemote], XP_LIMIT, currentLevel
        ))

        if progress[bpRemote] >= XP_LIMIT then
            sendToDiscord(string.format("‚úÖ ƒê√£ ho√†n th√†nh %s!", bpDisplay))
            local nextBP, nextName = getNextBattlePass()
            if nextBP then
                if activateBattlePass(nextBP) then
                    sendToDiscord("üîÑ ƒê√£ chuy·ªÉn sang: " .. nextName)
                    isFirstCheck = true
                end
            else
                sendToDiscord("üèÅ ƒê√É HO√ÄN TH√ÄNH T·∫§T C·∫¢ BATTLEPASS!")
                LocalPlayer:Kick("B·∫°n ƒë√£ ho√†n th√†nh to√†n b·ªô BattlePass.")
            end
        end
    end

    lastXP = currentXP
    lastLevel = currentLevel
end

-- ========== KH·ªûI CH·∫†Y ==========
local function main()
    sendToDiscord("üü¢ Script BattlePass Tracker ƒë√£ kh·ªüi ƒë·ªông!")
    loadProgress()

    local nextBP, name = getNextBattlePass()
    if nextBP and activateBattlePass(nextBP) then
        local msg = "üöÄ THEO D√ïI BATTLEPASS:\n"
        for _, bp in ipairs(BATTLE_PASSES) do
            msg = msg .. string.format("%s: %d/%d\n", bp.display, progress[bp.remote] or 0, XP_LIMIT)
        end
        msg = msg .. "üîõ ƒêANG K√çCH HO·∫†T: " .. name
        sendToDiscord(msg)
        isFirstCheck = true
    else
        sendToDiscord("üéñÔ∏è T·∫§T C·∫¢ BATTLEPASS ƒê√É HO√ÄN TH√ÄNH!")
        return
    end

    while task.wait(5) do
        if allMaxed() then break end
        checkProgress()
    end
end

-- ========== CH·∫†Y SCRIPT ==========
local ok, err = pcall(main)
if not ok then
    warn("L·ªñI:", err)
    sendToDiscord("‚ùå L·ªói nghi√™m tr·ªçng: " .. tostring(err))
end
